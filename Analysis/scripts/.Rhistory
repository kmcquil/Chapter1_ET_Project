library(raster)
library(rgdal)
library(gdalUtils)
library(foreach)
library(doParallel)
library(data.table)
library(Metrics)
library(ggplot2)
home <- "/Volumes/GoogleDrive/My Drive/Chapter1_ET_Project"
metrics_fun <- function(observed, predicted, time){
n = length(observed)
et_lm <- lm(predicted ~ observed)
slope <- et_lm$coefficients[2]
r2 <- summary(et_lm)$r.squared
RMSE <- rmse(observed, predicted) # remember this is for 8 days
MAE <- mae(observed, predicted)
RE <- (MAE/mean(observed, na.rm=T))*100
met_dt <- data.table(TimeStep = time, Count = n, RMSE = RMSE, MAE = MAE, RE = RE, Slope = slope, R2 = r2)
return(met_dt)
}
ec_et <- fread("/Volumes/GoogleDrive/My Drive/Dissertation/ameriflux/et_mod_obs_df.csv")
ec_et <- ec_et[V1 >= as.Date("2011-01-01") & V1 < as.Date("2016-01-01")]
cwt <- readOGR(paste0(home, "/Data/coweeta/cwt_flx_twr.shp"))
plot(cwt)
tifs <- list.files(paste0(home, "/Data/MODIS_ET/clean"), full.names=T, pattern = ".tif$")
tifs_short <- list.files(paste0(home, "/Data/MODIS_ET/clean"), full.names=F, pattern = ".tif$")
et_df <- data.table(file = tifs,
start_date = as.Date(substr(tifs_short, 4, 11), "%Y%m%d"),
end_date = as.Date(rep(NA, length(tifs))),
MODIS_ET = as.numeric(rep(NA, length(tifs))),
OBS_ET = as.numeric(rep(NA, length(tifs))),
countNA = as.numeric(rep(NA, length(tifs))))
for(i in 1:nrow(et_df)-1){
et_df$end_date[i] <- et_df$start_date[i+1]-1
}
et_df
et_df <- et_df[start_date >= as.Date("2011-01-01") & end_date < as.Date("2016-01-01")]
cwt_buff <- buffer(cwt, 300)
for(i in 1:nrow(et_df)){
et_df$MODIS_ET[i] <- raster::extract(raster(et_df$file[i]), cwt_buff, fun = mean, na.rm=T, df=T)[1,2]
et_df$OBS_ET[i] <- sum(ec_et[V1 >= et_df$start_date[i] & V1 <= et_df$end_date[i]]$ET_obs_coweeta, na.rm=T)
et_df$countNA[i] <- sum(is.na(ec_et[V1 >= et_df$start_date[i] & V1 <= et_df$end_date[i]]$ET_obs_coweeta))
print(i)
}
install.packages('rgeos')
library(rgeos)
et_df <- data.table(file = tifs,
start_date = as.Date(substr(tifs_short, 4, 11), "%Y%m%d"),
end_date = as.Date(rep(NA, length(tifs))),
MODIS_ET = as.numeric(rep(NA, length(tifs))),
OBS_ET = as.numeric(rep(NA, length(tifs))),
countNA = as.numeric(rep(NA, length(tifs))))
for(i in 1:nrow(et_df)-1){
et_df$end_date[i] <- et_df$start_date[i+1]-1
}
# subset to dates when we have flux tower and MODIS data
et_df <- et_df[start_date >= as.Date("2011-01-01") & end_date < as.Date("2016-01-01")]
# the flux tower sits towards the upper right of the MODIS pixel.
# add a 300m buffer around the flux tower and use that to extract the average MODIS value
cwt_buff <- buffer(cwt, 300)
plot(cwt_buff, add=T)
cwt_buff
cwt_df
et_df
for(i in 1:nrow(et_df)){
et_df$MODIS_ET[i] <- raster::extract(raster(et_df$file[i]), cwt_buff, fun = mean, na.rm=T, df=T)[1,2]
et_df$OBS_ET[i] <- sum(ec_et[V1 >= et_df$start_date[i] & V1 <= et_df$end_date[i]]$ET_obs_coweeta, na.rm=T)
et_df$countNA[i] <- sum(is.na(ec_et[V1 >= et_df$start_date[i] & V1 <= et_df$end_date[i]]$ET_obs_coweeta))
print(i)
}
Mod8day <- metrics_fun(et_df$OBS_ET, et_df$MODIS_ET, "8Day")
Mod8day
et_df <- data.table(file = tifs,
start_date = as.Date(substr(tifs_short, 4, 11), "%Y%m%d"),
end_date = as.Date(rep(NA, length(tifs))),
MODIS_ET = as.numeric(rep(NA, length(tifs))),
OBS_ET = as.numeric(rep(NA, length(tifs))),
countNA = as.numeric(rep(NA, length(tifs))))
for(i in 1:nrow(et_df)-1){
et_df$end_date[i] <- et_df$start_date[i+1]-1
}
# subset to dates when we have flux tower and MODIS data
et_df <- et_df[start_date >= as.Date("2011-01-01") & end_date < as.Date("2016-01-01")]
# the flux tower sits towards the upper right of the MODIS pixel.
# add a 300m buffer around the flux tower and use that to extract the average MODIS value
cwt_buff <- buffer(cwt, 300)
cwt_buff <- buffer(cwt, 500)
cwt_buff
et_df
for(i in 1:nrow(et_df)){
et_df$MODIS_ET[i] <- raster::extract(raster(et_df$file[i]), cwt_buff, fun = mean, na.rm=T, df=T)[1,2]
et_df$OBS_ET[i] <- sum(ec_et[V1 >= et_df$start_date[i] & V1 <= et_df$end_date[i]]$ET_obs_coweeta, na.rm=T)
et_df$countNA[i] <- sum(is.na(ec_et[V1 >= et_df$start_date[i] & V1 <= et_df$end_date[i]]$ET_obs_coweeta))
print(i)
}
Mod8day500 <- metrics_fun(et_df$OBS_ET, et_df$MODIS_ET, "8Day")
Mod8day500
Mod8day
monthly_et_df <- et_df[, .(MODIS_ET_avg = mean(MODIS_ET), OBS_ET_avg = mean(OBS_ET)), .(year(start_date), month(start_date))]
ModMonthly <- metrics_fun(monthly_et_df$OBS_ET_avg, monthly_et_df$MODIS_ET_avg, "Monthly")
ModMonthly
ec_et <- fread("/Volumes/GoogleDrive/Dissertation/ameriflux/et_mod_obs_df.csv")
ec_et <- ec_et[V1 >= as.Date("2011-01-01") & V1 < as.Date("2016-01-01")]
landsat_tifs <- list.files(paste0(home, "/Data/Landsat_ET/tifs_resampled"), full.names=T, pattern = ".tif$")
landsat_tifs_short <- list.files(paste0(home, "/Data/Landsat_ET/tifs_resampled"), full.names=F, pattern = ".tif$")
et_df <- data.table(file = landsat_tifs,
start_date = as.Date(substr(landsat_tifs_short, 4, 11), "%Y%m%d"),
Landsat_ET = as.numeric(rep(NA, length(landsat_tifs))),
countNA = as.numeric(rep(NA, length(landsat_tifs))))
et_df <- et_df[start_date >= as.Date("2011-01-01") & start_date <= as.Date("2015-01-01"), ]
et_df
for(i in 1:nrow(et_df)){
ext_df <- raster::extract(raster(et_df$file[i]), cwt_buff, df=T)
et_df$Landsat_ET[i] <- mean(ext_df[,2], na.rm=T)
et_df$countNA[i] <- sum(is.na(ext_df[,2]))/nrow(ext_df)
print(i)
}
et_df_sub <- et_df[!et_df$countNA == 1,]
et_df_sub_50 <- et_df_sub[et_df_sub$countNA < 0.2,] # only keep dates where less htan 20% of pixels are missing
et_df_sub_50 <- merge(et_df_sub_50, ec_et[,c("V1", "ET_obs_coweeta")], by.x="start_date", by.y = "V1", all.x=T)
metrics_fun(et_df_sub_50$ET_obs_coweeta, et_df_sub_50$Landsat_ET, "Overpass")
et_df_sub_50$MY <- paste0(year(et_df_sub_50$start_date), "_", month(et_df_sub_50$start_date))
et_df_sub_50_mo <- et_df_sub_50[, .(Landsat_ET_mean = mean(Landsat_ET, na.rm=T), ET_obs_coweeta_mean = mean(ET_obs_coweeta, na.rm=T)), .(MY)]
metrics_fun(et_df_sub_50_mo$ET_obs_coweeta_mean, et_df_sub_50_mo$Landsat_ET_mean, "Monthly Average")
